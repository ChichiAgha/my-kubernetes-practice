{"version":3,"sources":["DropDown/DropDown.js","Face/Face.js","Card/Card.js","ApplicationList/ApplicationList.js","Header/Header.js","NavBar/NavBar.js","serviceWorker.js","App/App.js","index.js"],"names":["DropDown","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleChange","event","setState","selectValue","target","value","setApplicationStatus","setParentStateFromChild","state","selectedStatus","react_default","a","createElement","onChange","React","Component","Face","console","log","color","md","style","height","width","icon","wi","Header","handleDelete","fetch","application","_id","$oid","method","then","resp","status","deleteApplicationFromState","alert","setStateFromChild","dropDownValueFromChild","application_name","application_status","handleSubmit","edit","handleToggleClick","bind","assertThisInitialized","_this2","data","body","JSON","stringify","headers","Accept","Content-Type","getApplicationsThroughParent","err","catch","parentEdit","className","onClick","fa","src_DropDown_DropDown","ti","class","src_Face_Face","ApplicationList","appId","newArray","toConsumableArray","applications","idToDelete","findIndex","element","splice","getApplications","preventDefault","createApplication","response","json","values","dataArr","_this3","url","arguments","length","undefined","mode","cache","credentials","redirect","referrer","_this4","onSubmit","type","map","name","index","key","Card_Card","head","background","NavBar","toggleAppEdit","toggleEdit","Boolean","window","location","hostname","match","App","src_NavBar_NavBar","src_Header_Header","src_ApplicationList_ApplicationList","ReactDOM","render","src_App_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0d97bdc2.chunk.js","sourcesContent":["import React from 'react'\nimport './DropDown.css'\n\nclass DropDown extends React.Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            selectValue: this.props.selectedStatus\n        }\n    }\n\n    handleChange = (event) => {\n        this.setState({ selectValue: event.target.value },() => {\n            this.setApplicationStatus();\n        });\n      }\n\n    setApplicationStatus = () => {\n        this.props.setParentStateFromChild(this.state.selectValue);\n    }\n\n    render () {\n\n        return (\n                <select value={this.state.selectValue} onChange={this.handleChange} >\n                    <option value=\"green\">green</option>\n                    <option value=\"yellow\">yellow</option>\n                    <option value=\"red\">red</option>\n                </select>\n        )\n\n\n    }\n}\n\nexport default DropDown;","import React from 'react';\nimport { MdSentimentSatisfied, MdWarning } from \"react-icons/md\"; \nimport { WiFire } from \"react-icons/wi\"; \n\n\n\nclass Face extends React.Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n        }\n    }\n\n    componentDidMount() {\n        console.log(\"props available to face\" + this.props.color)\n    }\n\n    // style = {\n    //     color: this.props.color\n    // }\n\n    render() {\n        if(this.props.color === 'green') {\n            const style = {\n                color: '#1eff1e',\n                height: '2em',\n                width: '2em'\n            }\n            return (    \n                <div>\n                <h1 > \n                <MdSentimentSatisfied style={style}/>\n                 </h1>\n                 <p>No problems reported.</p>\n                 </div>\n            )\n\n        \n        } else if (this.props.color === 'yellow') {\n            const style = {\n                color: 'yellow',\n                height: '2em',\n                width: '2em'\n            }\n            return (\n                <div>\n                    <h1>\n                    <MdWarning style={style}/>\n                    </h1>\n                    <p>We are currently investigating issues with the service.</p>\n                 </div>\n            )\n        }else if (this.props.color === 'red') {\n            const style = {\n                color: 'red',\n                icon:  {\n                    height: '2em',\n                    width: '2em',\n                }\n            }\n            return (    \n                <div style={style} >\n                    <h1 >\n                    <WiFire style={style.icon}/>\n                    </h1>\n                    <p>There is an outage in this service, and we have all teams on deck actively fixing the issue.</p>\n                 </div>\n            )\n        }\n\n    }\n}\n\n\nexport default Face;","import React from 'react';\nimport DropDown from '../DropDown/DropDown'\nimport Face from '../Face/Face'\nimport './Card.css'\nimport { TiPencil, TiTrash } from \"react-icons/ti\";\nimport { FaRegSave } from \"react-icons/fa\"; \n\n\nclass Header extends React.Component  {\n    constructor(props) {\n        super(props);\n        this.state = {\n            edit: false,\n            value: this.props.application_name,\n            application_name: this.props.application.application_name,\n            application_status: this.props.application.application_status\n\n        };\n        this.handleToggleClick = this.handleToggleClick.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n\n      }\n\n      handleToggleClick() {\n          if(this.state.edit) {\n              this.handleSubmit()\n          }\n        this.setState(state => ({\n          edit: !state.edit\n        }));\n      }\n\n    handleSubmit() {\n        const data = {\n            _id: this.props.application._id.$oid ,\n            application_name: this.state.value || this.state.application_name,\n            application_status: this.state.application_status\n        }\n\n         fetch('http://localhost/edit', {\n            method: 'put',\n            body: JSON.stringify(data),\n            headers: {\n              'Accept': 'application/json',\n              'Content-Type': 'application/json'\n            }\n          })\n            .then(resp => {\n                if (resp.status >= 200 && resp.status < 300) {\n                    this.setState({ edit:false,\n                                    value: '',\n                                    application_name: data.application_name,\n                                    application_status: data.application_status\n                                 }, () => {\n                                     this.props.getApplicationsThroughParent()\n                                 })\n                } else {\n                    alert('there was an error: ' + resp.status + \" \" + resp.err)\n                }\n            })\n            .catch(err => console.log(\"There was an error: \" + err))\n      }\n\n      handleDelete = () => {\n\n        fetch('http://localhost/delete?application=' + this.props.application._id.$oid, {method: \"DELETE\"})\n        .then(resp => {\n            if (resp.status >= 200 && resp.status < 300){\n                this.props.deleteApplicationFromState(this.props.application._id.$oid)\n            } else {\n                alert('error: '+ resp.status)\n            }\n        })\n\n      }\n\n      handleChange(event) {\n        this.setState({value: event.target.value});\n      }\n\n      setStateFromChild = (dropDownValueFromChild) => {\n          this.setState({ \n            application_name: this.state.application_name,\n            application_status: dropDownValueFromChild\n         } , () => {\n            this.handleSubmit();\n         })\n    }\n\n    render(props) {\n\n        if(this.props.parentEdit){\n            if (this.state.edit) {\n                return (\n                    <div className=\"card\">\n                            <p>Name:</p>\n                            <textarea value={this.state.value} onChange={this.handleChange} />\n\n                            <h3> \n                            <button onClick={this.handleToggleClick}>\n                            <FaRegSave />\n                            </button>\n                            </h3>\n                            Status: <DropDown setParentStateFromChild={this.setStateFromChild} selectedStatus={this.state.application_status} />\n                    </div>\n                )\n                \n            } else {\n                return (\n                    <div className=\"card\">\n                        <div className=\"app-name\">\n                            <h3> {this.state.application_name} \n                                <button onClick={this.handleToggleClick}>\n                                    <TiPencil />\n                                </button>\n                            </h3>\n\n                            <h3>\n                                <button onClick={this.handleDelete}>\n                                    <TiTrash />\n                                </button>\n                            </h3>\n                        </div>\n    \n                        <div class=\"status\">\n                            <h3> Status: {this.state.application_status} \n                            </h3>\n                            <Face color={this.state.application_status}/>\n\n                        </div>\n                    </div>\n                );\n            }\n        } else if (!this.props.parentEdit) {\n            return (\n                <div className=\"card\">\n                    <div className=\"app-name\">\n                        <h3> {this.state.application_name} \n                        </h3>\n                    </div>\n\n                    <div class=\"status\">\n                        <h3> Status: {this.state.application_status} \n                        </h3>\n                        <Face color={this.state.application_status}/>\n                    </div>\n                </div>\n            );\n        }\n\n\n\n\n\n\n        \n    }\n}\n\nexport default Header","import React from 'react'\nimport Card from '../Card/Card'\nimport './ApplicationList.css'\n\nclass ApplicationList extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n          applications: [],\n          value: 'Enter application name'\n                }\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    componentDidMount() {\n        this.getApplications()\n    }\n\n    handleChange(event) {\n        this.setState({value: event.target.value});\n      }\n    \n    handleSubmit(event) {\n        event.preventDefault();\n        this.createApplication();\n    }\n\n    getApplications() {\n        console.log('The child component Card called the parent components getApplications() function.')\n        fetch('http://localhost/applications')\n        .then((response) => response.json())\n        .then((data) => {\n            let dataArr = Object.values(data)\n            return dataArr\n        })\n        .then((dataArr) => this.setState({ applications: dataArr }))\n        .catch(err => {\n            console.log(err)\n        })\n    }\n\n    deleteApplicationFromState = (appId) => {\n        let newArray = [...this.state.applications]\n\n        const checkId = (element) => {\n            return element._id.$oid >= appId;\n        }\n        let idToDelete = newArray.findIndex(checkId)\n\n        newArray.splice(idToDelete, 1)\n        this.setState({ applications: newArray })\n\n        console.log('now lets check using findINDEX')\n        \n    }\n  \n    createApplication(url = `http://localhost/new-application`, data = {\n        application_name: this.state.value,\n        application_status: \"green\"\n    }) {\n        return fetch(url, {\n            method: \"POST\", \n            mode: \"cors\", \n            cache: \"no-cache\", \n            credentials: \"same-origin\", \n            headers: {\n                \"Content-Type\": \"application/json\",\n                \n            },\n            redirect: \"follow\",\n            referrer: \"no-referrer\",\n            body: JSON.stringify(data),\n        })\n        .then(response => {\n            response.json()\n        this.getApplications()\n        })\n        .catch(err => console.log(err))\n    }\n      \n\n    render()  {\n        if (this.props.edit) {\n        return (\n            <div className=\"applicationlist\">\n                <form onSubmit={this.handleSubmit}>\n                    <textarea value={this.state.value} onChange={this.handleChange} />\n                    <input type=\"submit\" value=\"Submit\" />\n                </form>\n            <ul>\n                {this.state.applications.map((name, index) => {\n                    return <li key={ index }>\n                                <Card application={name} \n                                getApplicationsThroughParent={this.getApplications} \n                                parentEdit={this.props.edit}\n                                deleteApplicationFromState={this.deleteApplicationFromState} />\n                            </li>;\n                  })}\n            </ul>\n            </div>\n        )\n    } else if (!this.props.edit) {\n        return (\n            <div className=\"applicationlist\">\n                <ul>\n                    {this.state.applications.map((name, index) => {\n                        return <li key={ index }>\n                                    <Card application={name} \n                                    getApplicationsThroughParent={this.getApplications} \n                                    parentEdit={this.props.edit}\n                                    deleteApplicationFromState={this.deleteApplicationFromState} />\n                                </li>;\n                    })}\n                </ul>\n            </div>\n        )\n    }\n    }\n}\n\nexport default ApplicationList;","import React from 'react';\n\nclass Header extends React.Component  {\n    head = {\n        height: '20vh',\n        background: \"linear-gradient(45deg, #8350CE 0%, #A43355 100%, #C59237 100%)\",\n        color: 'white'\n    }\n\n    render() {\n        if (!this.props.edit) {\n            return (\n                <div class='head-div' style={this.head}>\n                        <h1>Welcome to the status page app.</h1>\n                        <h2>Listed Applications are below</h2>\n                </div>\n            );\n        } else if (this.props.edit) {\n            return (\n                <div class='head-div' style={this.head}>\n                        <h1>Hello. Welcome to the status page app.</h1>\n                        <h2>Start out by entering an application you would like to keep track of.</h2>\n                </div>\n            );\n        }\n\n    }\n\n}\n\n\n\nexport default Header","import React from 'react';\nimport './NavBar.css'\nimport { MdHome } from \"react-icons/md\";\nimport { MdPublic } from \"react-icons/md\";\n\nclass NavBar extends React.Component {\n    constructor (props) {\n        super(props)\n\n        this.state = {\n        }\n    }\n\n    toggleAppEdit = () => {\n        this.props.toggleEdit()\n    }\n\n    render () {\n        if(this.props.edit) {\n            return (\n                <nav>\n                    <div className=\"navWide\">\n                        <div className=\"wideDiv\">\n                            <h1 onClick={this.toggleAppEdit}>\n                            See Public View \n                            <MdPublic />\n                            </h1>\n                            </div>\n                    </div>\n                </nav>\n            )\n        } else if (!this.props.edit) {\n            return (\n                <nav>\n                    <div className=\"navWide\">\n                        <div className=\"wideDiv\">\n                            <h1 onClick={this.toggleAppEdit}>\n                            See Edit View \n                            <MdHome />\n                            </h1>\n                            </div>\n                    </div>\n                </nav>\n            )\n        }\n    }\n}\n\nexport default NavBar;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ApplicationList from '../ApplicationList/ApplicationList'\nimport Header from '../Header/Header'\nimport NavBar from '../NavBar/NavBar'\nimport '../index.css'\nimport * as serviceWorker from '../serviceWorker';\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            edit: true\n        }\n    }\n\n    toggleEdit = () => {\n        this.setState({ edit: !this.state.edit})\n    }\n\n    render() {\n        return (    \n            <div className='lead-div'>\n                <NavBar toggleEdit={this.toggleEdit} edit={this.state.edit}/>\n                <Header edit={this.state.edit}/>\n                <ApplicationList edit={this.state.edit} />\n            </div>\n        )\n    }\n}\n\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport ApplicationList from './ApplicationList/ApplicationList'\nimport Header from './Header/Header'\nimport NavBar from './NavBar/NavBar'\nimport App from './App/App'\nimport './index.css'\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <App />\n    , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}